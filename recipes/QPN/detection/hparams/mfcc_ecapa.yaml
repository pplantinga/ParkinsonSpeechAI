
# ################################
# Model: Parkinson's identification with ECAPA
# Author: Briac Cordelle
# ################################

# Basic parameters
seed: 2007
lr_factor: 1
lr: !ref 0.004 / 2 ** <lr_factor>
__set_seed: !apply:torch.manual_seed [!ref <seed>]
experiment_name: mfcc_ecapa
results_dir: results
output_folder: !ref <results_dir>/<experiment_name>/lr_<lr>_seed_<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
data_folder: !PLACEHOLDER
train_annotation: !ref <output_folder>/train.json
test_fr_annotation: !ref <output_folder>/test_fr.json
test_en_annotation: !ref <output_folder>/test_en.json
valid_annotation: !ref <output_folder>/valid.json

skip_prep: False
ckpt_interval_minutes: 15 # save checkpoint every N min

# Training parameters
epochs: 65
batch_size: 4
test_batch_size: 1
base_lr: !ref <lr> / 1000
max_lr: !ref <lr>
step_size: 2000
sample_rate: 16000
sentence_len: 15.0 # seconds
shuffle: True
short_recordings: True

# Number of classes (pd/non-pd)
weight_hc: 86.79
weight_pd: 13.21
out_neurons: 2

# Dataloader options
num_workers: 4
dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: !ref <shuffle>
    num_workers: !ref <num_workers>
    drop_last: True

test_dataloader_options:
    batch_size: !ref <test_batch_size>
    shuffle: !ref <shuffle>
    num_workers: !ref <num_workers>

# Augmentations would be here
# See voxceleb recipe to add them back
# For now we are going without and we will add them (one at a time) once we are
# sure of our preliminary results

# Functions
n_mfcc: 20
add_vocal_features: True
compute_features: !new:speechbrain.lobes.features.MFCC
    n_fft: 480
    n_mfcc: !ref <n_mfcc>
    win_length: 30
    hop_length: 10
    deltas: False
    context: False

embedding_model: !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
    input_size: !ref <n_mfcc> + 4
    channels: [1024, 1024, 1024, 1024, 3072]
    kernel_sizes: [5, 3, 3, 3, 1]
    dilations: [1, 2, 3, 4, 1]
    groups: [1, 1, 1, 1, 1]
    attention_channels: 128
    lin_neurons: 192

classifier: !new:speechbrain.lobes.models.ECAPA_TDNN.Classifier
    input_size: 192
    out_neurons: !ref <out_neurons>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <epochs>

mean_var_norm: !new:speechbrain.processing.features.InputNormalization
    norm_type: sentence
    std_norm: False

modules:
    compute_features: !ref <compute_features>
    embedding_model: !ref <embedding_model>
    classifier: !ref <classifier>
    mean_var_norm: !ref <mean_var_norm>

softmax: !new:speechbrain.nnet.activations.Softmax
log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

compute_cost: !name:speechbrain.nnet.losses.nll_loss

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0.0001

lr_annealing: !new:speechbrain.nnet.schedulers.CyclicLRScheduler
    base_lr: !ref <base_lr>
    max_lr: !ref <max_lr>
    step_size: !ref <step_size>

# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        #compute_features: !ref <compute_features>
        embedding_model: !ref <embedding_model>
        classifier: !ref <classifier>
        normalizer: !ref <mean_var_norm>
        counter: !ref <epoch_counter>
        lr_annealing: !ref <lr_annealing>
