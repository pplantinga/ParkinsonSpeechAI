# ################################
# Model: Parkinson's identification with ECAPA
# Author: Briac Cordelle
# ################################

# Basic parameters
seed: 2002
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Save folders and paths
experiment_name: wavlm_ecapa
storage_folder: !PLACEHOLDER # where you want to save results ($HOME/scratch/results on compute canada, maybe just results/ on personal machine)
output_folder: !ref <storage_folder>/<experiment_name>/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
predictions_file: !ref <output_folder>/predictions.csv
encoded_labels: !ref <save_folder>/label_encoder.txt

# Data files
data_folder: !PLACEHOLDER
train_annotation: !ref <output_folder>/train.json
test_annotation: !ref <output_folder>/test.json
valid_annotation: !ref <output_folder>/valid.json

skip_prep: False
ckpt_interval_minutes: 15 # save checkpoint every N min

# Training parameters
epochs: 65
batch_size: 16
lr: 0.001
base_lr: 0.000001
max_lr: !ref <lr>
step_size: 2000
sample_rate: 16000
sentence_len: 15.0 # seconds
shuffle: True
remove_keys: [""]
loss: "focal"

# Test parameters
max_test_chunks: 24
test_batch_size: 1

# Feature parameters
wavlm_hub: !PLACEHOLDER #path/to/wavlm/checkpoint
wavlm_folder: !ref <output_folder>/wavlm-large
freeze_wavlm_extractor: True
freeze_wavlm: True
lr_wavlm: 0.0001

# Number of classes (pd/non-pd)
weight_hc: 86.79
weight_pd: 13.21
out_neurons: 2

# Dataloader options
num_workers: 8
dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: !ref <shuffle>
    num_workers: !ref <num_workers>

test_dataloader_options:
    batch_size: !ref <test_batch_size>
    shuffle: !ref <shuffle>
    num_workers: !ref <num_workers>

# Augmentations would be here
# See voxceleb recipe to add them back
# For now we are going without and we will add them (one at a time) once we are
# sure of our preliminary results

# Functions
compute_features: !new:speechbrain.lobes.models.huggingface_transformers.wavlm.WavLM
   source: !ref <wavlm_hub>
   output_norm: True
   freeze_feature_extractor: !ref <freeze_wavlm_extractor>
   freeze: !ref <freeze_wavlm>
   save_path: !ref <wavlm_folder>

embedding_model: !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
    input_size: 1024
    channels: [1024, 1024, 1024, 1024, 3072]
    kernel_sizes: [5, 3, 3, 3, 1]
    dilations: [1, 2, 3, 4, 1]
    groups: [1, 1, 1, 1, 1]
    attention_channels: 128
    lin_neurons: 192

classifier: !new:speechbrain.lobes.models.ECAPA_TDNN.Classifier
    input_size: 192
    out_neurons: !ref <out_neurons>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <epochs>

mean_var_norm: !new:speechbrain.processing.features.InputNormalization
    norm_type: sentence
    std_norm: False

modules:
    compute_features: !ref <compute_features>
    embedding_model: !ref <embedding_model>
    classifier: !ref <classifier>
    mean_var_norm: !ref <mean_var_norm>

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

focal_loss: !new:focal_loss.focal_loss
    gamma: 2.0
    alpha: [!ref <weight_hc>, !ref <weight_pd>]

# AAM loss
KLD_Loss: !name:speechbrain.nnet.losses.kldiv_loss
    reduction: sum

AAM_loss: !new:speechbrain.nnet.losses.AdditiveAngularMargin
    margin: 0.2
    scale: 30

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0.0001

wavlm_opt_class: !name:torch.optim.Adam
   lr: !ref <lr_wavlm>

lr_annealing: !new:speechbrain.nnet.schedulers.CyclicLRScheduler
    base_lr: !ref <base_lr>
    max_lr: !ref <max_lr>
    step_size: !ref <step_size>

lr_annealing_wavlm: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_wavlm>
   improvement_threshold: 0.0025
   annealing_factor: 0.9
   patient: 0

# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

# Error computation
error_stats: !name:speechbrain.utils.metric_stats.BinaryMetricStats
    positive_label: 1
error_metric: F-score

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        compute_features: !ref <compute_features>
        embedding_model: !ref <embedding_model>
        classifier: !ref <classifier>
        normalizer: !ref <mean_var_norm>
        counter: !ref <epoch_counter>
        lr_annealing: !ref <lr_annealing>
